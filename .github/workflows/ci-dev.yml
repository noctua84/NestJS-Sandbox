# Development workflow for this repository.
# It runs the following Jobs:
# 1. Linting (ESLint)
# 2. Formatting (Prettier)
# 3. Unit Tests
# 4. Integration Tests
name: CI Development Pipeline

on:
  push:
    branches:
      - develop
      - feature/*

jobs:
  linting:
    name: Linting (ESLint)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: linting
        run: npm run lint

      - name: Check if code has changed
        id: check_lint_changes
        run: git diff --quiet HEAD -- || echo "::set-output name=changed::true"

      - name: Persist changes in code
        if: steps.check_lint_changes.outputs.changed == 'true'
        run: |
          git add .
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -m "chore(eslint): Fix linting errors"
          git push

  formatting:
    name: Formatting (Prettier)
    runs-on: ubuntu-latest
    needs: linting

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull latest changes
        run: git pull

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: formatting
        run: npm run format

      - name: Check if code has changed
        id: check_formatting_changes
        run: git diff --quiet HEAD -- || echo "::set-output name=changed::true"

      - name: Persist changes in code
        if: steps.check_formatting_changes.outputs.changed == 'true'
        run: |
          git add .
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -m "chore(prettier): Fix linting errors"
          git push

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: unit testing
        run: npm test

  e2e_tests:
    name: End to End Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: End to End Tests
        env:
          ENABLE_METRICS: true
          ENABLE_HEALTH_CHECK: true
          DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public"
        run: npm run test:e2e

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}